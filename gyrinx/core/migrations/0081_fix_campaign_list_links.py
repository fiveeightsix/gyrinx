# Generated by Django 5.2.4 on 2025-07-16 06:31

from django.db import migrations
from django.contrib.auth import get_user_model

User = get_user_model()


def fix_campaign_list_links(apps, schema_editor):
    Campaign = apps.get_model("core", "Campaign")
    CampaignAsset = apps.get_model("core", "CampaignAsset")
    CampaignListResource = apps.get_model("core", "CampaignListResource")
    CampaignAction = apps.get_model("core", "CampaignAction")
    List = apps.get_model("core", "List")

    # Get the gyrinx system user for creating actions
    try:
        system_user = User.objects.get(username="gyrinx")
    except User.DoesNotExist:
        # Create a system user if it doesn't exist
        system_user = User.objects.create_user(
            username="gyrinx", email="system@gyrinx.app", is_active=False
        )

    # Process all campaigns
    for campaign in Campaign.objects.all():
        # Handle pre-campaign campaigns - unassign all assets and resources
        if campaign.status == Campaign.PRE_CAMPAIGN:
            # Unassign all assets
            for asset in CampaignAsset.objects.filter(
                asset_type__campaign=campaign, holder__isnull=False
            ):
                old_holder = asset.holder
                asset.holder = None
                asset.save()

                # Create action to log the unassignment
                CampaignAction.objects.create(
                    campaign=campaign,
                    user=system_user,
                    list=old_holder,
                    description=f"Asset '{asset.name}' was automatically unassigned from the gang '{old_holder.name}' because the campaign is in pre-campaign status, to resolve a Gyrinx-internal issue.",
                    owner=system_user,
                )

            # Clear all list resources for pre-campaign
            for resource in CampaignListResource.objects.filter(campaign=campaign):
                if resource.amount > 0:
                    old_amount = resource.amount
                    resource.amount = 0
                    resource.save()

                    CampaignAction.objects.create(
                        campaign=campaign,
                        user=system_user,
                        list=resource.list,
                        description=f"Resource '{resource.resource_type.name}' was automatically reset to 0 (from {old_amount}) for gang '{resource.list.name}' because the campaign is in pre-campaign status, to resolve a Gyrinx-internal issue.",
                        owner=system_user,
                    )

        # Handle in-progress campaigns
        elif campaign.status == Campaign.IN_PROGRESS:
            # Check assets
            for asset in CampaignAsset.objects.filter(
                asset_type__campaign=campaign, holder__isnull=False
            ):
                if asset.holder.status == List.LIST_BUILDING:
                    # Find the campaign-mode version of this list
                    campaign_mode_list = List.objects.filter(
                        original_list=asset.holder,
                        status=List.CAMPAIGN_MODE,
                        campaign=campaign,
                    ).first()

                    if campaign_mode_list:
                        old_holder = asset.holder
                        asset.holder = campaign_mode_list
                        asset.save()

                        CampaignAction.objects.create(
                            campaign=campaign,
                            user=system_user,
                            list=campaign_mode_list,
                            description=f"Asset '{asset.name}' was automatically reassigned to the campaign version of the gang '{campaign_mode_list.name}', to resolve a Gyrinx-internal issue.",
                            owner=system_user,
                        )

            # Check resources
            for resource in CampaignListResource.objects.filter(campaign=campaign):
                if resource.list.status == List.LIST_BUILDING:
                    # Find the campaign-mode version of this list
                    campaign_mode_list = List.objects.filter(
                        original_list=resource.list,
                        status=List.CAMPAIGN_MODE,
                        campaign=campaign,
                    ).first()

                    if campaign_mode_list:
                        # Check if a resource entry already exists for the campaign mode list
                        existing_resource = CampaignListResource.objects.filter(
                            campaign=campaign,
                            resource_type=resource.resource_type,
                            list=campaign_mode_list,
                        ).first()

                        if existing_resource:
                            # Add the amount to the existing resource
                            if resource.amount > 0:
                                existing_resource.amount += resource.amount
                                existing_resource.save()

                                CampaignAction.objects.create(
                                    campaign=campaign,
                                    user=system_user,
                                    list=campaign_mode_list,
                                    description=f"Resource '{resource.resource_type.name}' amount {resource.amount} was automatically transferred to the campaign version of the gang '{campaign_mode_list.name}', to resolve a Gyrinx-internal issue.",
                                    owner=system_user,
                                )

                                # Clear the old resource
                                resource.amount = 0
                                resource.save()
                        else:
                            # Reassign the resource to the campaign mode list
                            resource.list = campaign_mode_list
                            resource.save()

                            CampaignAction.objects.create(
                                campaign=campaign,
                                user=system_user,
                                list=campaign_mode_list,
                                description=f"Resource '{resource.resource_type.name}' was automatically reassigned to the campaign version of the gang '{campaign_mode_list.name}', to resolve a Gyrinx-internal issue.",
                                owner=system_user,
                            )


def reverse_fix_campaign_list_links(apps, schema_editor):
    # This is a data migration to fix corrupted data, so we don't need a reverse
    pass


class Migration(migrations.Migration):
    dependencies = [
        (
            "core",
            "0001_squashed_0080_alter_historicallistfighter_private_notes_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(fix_campaign_list_links, reverse_fix_campaign_list_links),
    ]
