# Generated by Django 5.2.4 on 2025-07-16 06:31

import logging
from django.db import migrations, transaction

logger = logging.getLogger(__name__)


def fix_campaign_list_links(apps, schema_editor):
    Campaign = apps.get_model("core", "Campaign")
    CampaignAsset = apps.get_model("core", "CampaignAsset")
    CampaignListResource = apps.get_model("core", "CampaignListResource")
    CampaignAction = apps.get_model("core", "CampaignAction")
    List = apps.get_model("core", "List")
    User = apps.get_model("auth", "User")

    # What this migration does:
    # - For all campaigns, if the campaign is in pre-campaign status, it unassigns all assets and resources.
    # - If the campaign is in in-progress status, it
    #   - Reassigns assets to the campaign-mode version of the gang if it exists.
    #   - Reassigns resources to the campaign-mode version of the gang if it exists.
    #   - If a resource already exists for the campaign mode list, it adds the amount to the existing resource instead of creating a new one.
    #
    # The migration should create campaign actions for all changes made, logging the unassignment or reassignment of assets and resources.
    #
    # This migration is to fix issues with campaign list links and ensure that assets and resources are correctly assigned
    # to the campaign-mode versions of gangs when campaigns are in progress.

    # Get the gyrinx system user for creating actions
    try:
        system_user = User.objects.get(username="gyrinx")
    except User.DoesNotExist:
        # Create a system user if it doesn't exist
        try:
            system_user = User.objects.create_user(
                username="gyrinx", email="system@gyrinx.app", is_active=False
            )
        except Exception as e:
            logger.error(f"Failed to create system user: {e}")
            return  # Exit if we can't create the system user

    # Process all campaigns
    for campaign in Campaign.objects.all():
        try:
            with transaction.atomic():
                # Handle pre-campaign campaigns - unassign all assets and resources
                if campaign.status == "pre_campaign":
                    # Unassign all assets
                    for asset in CampaignAsset.objects.filter(
                        asset_type__campaign=campaign, holder__isnull=False
                    ):
                        try:
                            old_holder = asset.holder
                            asset.holder = None
                            asset.save()

                            # Create action to log the unassignment
                            CampaignAction.objects.create(
                                campaign=campaign,
                                user=system_user,
                                list=old_holder,
                                description=f"Asset '{asset.name}' was automatically unassigned from the gang '{old_holder.name}' because the campaign is in pre-campaign status. This resolves a Gyrinx-internal issue.",
                                owner=system_user,
                            )
                        except Exception as e:
                            logger.error(f"Failed to unassign asset {asset.id}: {e}")

                    # Delete all list resources for pre-campaign
                    for resource in CampaignListResource.objects.filter(
                        campaign=campaign
                    ):
                        try:
                            old_amount_msg = ""
                            if resource.amount > 0:
                                old_amount_msg = f" (had {resource.amount})"

                            list_obj = resource.list
                            resource_name = resource.resource_type.name
                            list_name = list_obj.name

                            resource.delete()

                            CampaignAction.objects.create(
                                campaign=campaign,
                                user=system_user,
                                list=list_obj,
                                description=f"Resource '{resource_name}' was automatically removed{old_amount_msg} for gang '{list_name}' because the campaign is in pre-campaign status. This resolves a Gyrinx-internal issue.",
                                owner=system_user,
                            )
                        except Exception as e:
                            logger.error(
                                f"Failed to delete resource {resource.id}: {e}"
                            )

                # Handle in-progress campaigns
                elif campaign.status == "in_progress":
                    # Check assets
                    for asset in CampaignAsset.objects.filter(
                        asset_type__campaign=campaign, holder__isnull=False
                    ):
                        try:
                            if asset.holder.status == "list_building":
                                # Find the campaign-mode version of this list
                                campaign_mode_list = List.objects.filter(
                                    original_list=asset.holder,
                                    status="campaign_mode",
                                    campaign=campaign,
                                ).first()

                                if campaign_mode_list:
                                    old_holder = asset.holder
                                    asset.holder = campaign_mode_list
                                    asset.save()

                                    CampaignAction.objects.create(
                                        campaign=campaign,
                                        user=system_user,
                                        list=campaign_mode_list,
                                        description=f"Asset '{asset.name}' was automatically reassigned to the campaign version of the gang '{campaign_mode_list.name}'. This resolves a Gyrinx-internal issue.",
                                        owner=system_user,
                                    )
                                else:
                                    old_holder = asset.holder
                                    CampaignAction.objects.create(
                                        campaign=campaign,
                                        user=system_user,
                                        list=old_holder,
                                        description=f"Asset '{asset.name}' could not be reassigned to a campaign version of the gang '{old_holder.name}' because it does not exist. This was intended to resolve a Gyrinx-internal issue but failed.",
                                        owner=system_user,
                                    )
                        except Exception as e:
                            logger.error(f"Failed to process asset {asset.id}: {e}")

                    # Check resources
                    for resource in CampaignListResource.objects.filter(
                        campaign=campaign
                    ):
                        try:
                            if resource.list.status == "list_building":
                                # Find the campaign-mode version of this list
                                campaign_mode_list = List.objects.filter(
                                    original_list=resource.list,
                                    status="campaign_mode",
                                    campaign=campaign,
                                ).first()

                                if campaign_mode_list:
                                    # Check if a resource entry already exists for the campaign mode list
                                    existing_resource = (
                                        CampaignListResource.objects.filter(
                                            campaign=campaign,
                                            resource_type=resource.resource_type,
                                            list=campaign_mode_list,
                                        ).first()
                                    )

                                    if existing_resource:
                                        # Add the amount to the existing resource
                                        if resource.amount > 0:
                                            existing_resource.amount += resource.amount
                                            existing_resource.save()

                                            CampaignAction.objects.create(
                                                campaign=campaign,
                                                user=system_user,
                                                list=campaign_mode_list,
                                                description=f"Resource '{resource.resource_type.name}' amount {resource.amount} was automatically transferred to the campaign version of the gang '{campaign_mode_list.name}'. This resolves a Gyrinx-internal issue.",
                                                owner=system_user,
                                            )

                                            # Delete the old resource
                                            resource.delete()
                                    else:
                                        # Reassign the resource to the campaign mode list
                                        resource.list = campaign_mode_list
                                        resource.save()

                                        CampaignAction.objects.create(
                                            campaign=campaign,
                                            user=system_user,
                                            list=campaign_mode_list,
                                            description=f"Resource '{resource.resource_type.name}' was automatically reassigned to the campaign version of the gang '{campaign_mode_list.name}'. This resolves a Gyrinx-internal issue.",
                                            owner=system_user,
                                        )
                                else:
                                    CampaignAction.objects.create(
                                        campaign=campaign,
                                        user=system_user,
                                        list=resource.list,
                                        description=f"Resource '{resource.resource_type.name}' could not be reassigned to a campaign version of the gang '{resource.list.name}' because it does not exist. This was intended to resolve a Gyrinx-internal issue but failed.",
                                        owner=system_user,
                                    )
                        except Exception as e:
                            logger.error(
                                f"Failed to process resource {resource.id}: {e}"
                            )
        except Exception as e:
            logger.error(f"Failed to process campaign {campaign.id}: {e}")


def reverse_fix_campaign_list_links(apps, schema_editor):
    # This is a data migration to fix corrupted data, so we don't need a reverse
    pass


class Migration(migrations.Migration):
    dependencies = [
        (
            "core",
            "0001_squashed_0080_alter_historicallistfighter_private_notes_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(fix_campaign_list_links, reverse_fix_campaign_list_links),
    ]
