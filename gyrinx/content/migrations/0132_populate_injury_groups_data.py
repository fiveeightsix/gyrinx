# Generated by Django 5.2.4 on 2025-08-04 06:57

from django.db import migrations


def populate_injury_groups(apps, schema_editor):
    """Create ContentInjuryGroup objects from existing injury groups."""
    ContentInjury = apps.get_model("content", "ContentInjury")
    ContentInjuryGroup = apps.get_model("content", "ContentInjuryGroup")

    # Get all unique group names from ContentInjury
    injury_groups = (
        ContentInjury.objects.exclude(group__isnull=True)
        .exclude(group="")
        .values_list("group", flat=True)
        .distinct()
        .order_by("group")
    )

    # Create ContentInjuryGroup objects for each unique group
    created_groups = {}
    for group_name in injury_groups:
        injury_group = ContentInjuryGroup.objects.create(
            name=group_name, description=f"Auto-migrated injury group: {group_name}"
        )
        created_groups[group_name] = injury_group

    # Update all injuries to link to their new ContentInjuryGroup
    for injury in ContentInjury.objects.exclude(group__isnull=True).exclude(group=""):
        injury.injury_group = created_groups[injury.group]
        injury.save(update_fields=["injury_group"])


def reverse_injury_groups(apps, schema_editor):
    """Reverse the migration by copying group names back."""
    ContentInjury = apps.get_model("content", "ContentInjury")

    # Copy injury_group names back to group field
    for injury in ContentInjury.objects.filter(injury_group__isnull=False):
        injury.group = injury.injury_group.name
        injury.save(update_fields=["group"])

    # Delete all ContentInjuryGroup objects
    ContentInjuryGroup = apps.get_model("content", "ContentInjuryGroup")
    ContentInjuryGroup.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("content", "0131_add_content_injury_group"),
    ]

    operations = [
        migrations.RunPython(populate_injury_groups, reverse_injury_groups),
    ]
