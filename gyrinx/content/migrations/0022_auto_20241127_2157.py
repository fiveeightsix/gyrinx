# Generated by Django 5.1.2 on 2024-11-27 21:57

from pathlib import Path

import yaml
from django.db import migrations

from gyrinx.content.management.utils import by_label
from gyrinx.content.models import ContentFighter as ContentFighterModel
from gyrinx.content.models import ContentHouse as ContentHouseModel
from gyrinx.models import FighterCategoryChoices


def do_migration(apps, schema_editor):
    ContentFighter: type[ContentFighterModel] = apps.get_model(
        "content", "ContentFighter"
    )
    ContentHouse: type[ContentHouseModel] = apps.get_model("content", "ContentHouse")

    # Resolve the content folder relative to this file
    root = Path(__file__).parent / "../../../content/necromunda-2018/data"
    fighter_dir = root / "fighter"

    gangs = [
        "ash_waste_nomads.yaml",
        "cawdor_gotu.yaml",
        "cawdor_hof.yaml",
        "chaos_cult.yaml",
        "corpse_grinder_cult.yaml",
        "delaque_gotu.yaml",
        "delaque_hos.yaml",
        "enforcers.yaml",
        "escher_gotu.yaml",
        "escher_hob.yaml",
        "genestealer_cult.yaml",
        "goliath_gotu.yaml",
        "goliath_hoc.yaml",
        "orlock_gotu.yaml",
        "orlock_hoi.yaml",
        # "other.yaml", # Not this one because no house value
        "slave_ogryn.yaml",
        "squat_prospectors.yaml",
        "van_saar_gotu.yaml",
        "van_saar_hoa.yaml",
        "venators.yaml",
    ]

    # fighter:
    # - category: Leader
    #   cost: 120
    #   equipment: []
    #   house: Ash Waste Nomads
    #   skills: []
    #   stats:
    #       a: 2
    #       bs: 4
    #       cl: 5
    #       i: 3
    #       int: 6
    #       ld: 5
    #       m: 6
    #       s: 3
    #       t: 3
    #       w: 2
    #       wil: 6
    #       ws: 3
    #   type: Kha'tragi Chieftain

    for gang in gangs:
        with open(fighter_dir / gang, "r") as file:
            data = yaml.safe_load(file)
            fighters = data["fighter"]
            for fighter in fighters:
                house = ContentHouse.objects.get(name=fighter["house"])
                category = by_label(FighterCategoryChoices, fighter["category"])
                instance, created = ContentFighter.objects.get_or_create(
                    type=fighter["type"],
                    category=category,
                    house=house,
                    base_cost=fighter["cost"],
                    movement=f'{fighter["stats"]["m"]}"',
                    weapon_skill=f"{fighter['stats']['ws']}+",
                    ballistic_skill=f"{fighter['stats']['bs']}+",
                    strength=f"{fighter['stats']['s']}",
                    toughness=f"{fighter['stats']['t']}",
                    wounds=f"{fighter['stats']['w']}",
                    initiative=f"{fighter['stats']['i']}+",
                    attacks=f"{fighter['stats']['a']}",
                    leadership=f"{fighter['stats']['ld']}+",
                    cool=f"{fighter['stats']['cl']}+",
                    willpower=f"{fighter['stats']['wil']}+",
                    intelligence=f"{fighter['stats']['int']}+",
                )


def reverse_migration(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("content", "0021_auto_20241127_2057"),
    ]

    operations = [migrations.RunPython(do_migration, reverse_migration, elidable=True)]
