# Generated by Django 5.2.4 on 2025-08-01 12:20

from django.db import migrations


def populate_injury_groups(apps, schema_editor):
    """
    Create ContentInjuryGroup records from existing injury group values
    and link injuries to their groups.
    """
    ContentInjury = apps.get_model("content", "ContentInjury")
    ContentInjuryGroup = apps.get_model("content", "ContentInjuryGroup")

    # Get all unique group names from existing injuries
    group_names = (
        ContentInjury.objects.exclude(group="")
        .values_list("group", flat=True)
        .distinct()
    )

    # Create ContentInjuryGroup for each unique group name
    group_map = {}
    for group_name in group_names:
        if group_name:  # Skip empty strings
            injury_group, created = ContentInjuryGroup.objects.get_or_create(
                name=group_name,
                defaults={
                    "description": f"Migrated from legacy injury group: {group_name}",
                    "restricted_to": [],  # No restrictions by default
                    "unavailable_to": [],
                },
            )
            group_map[group_name] = injury_group

    # Update injuries to link to their ContentInjuryGroup
    for injury in ContentInjury.objects.exclude(group=""):
        if injury.group and injury.group in group_map:
            injury.injury_group = group_map[injury.group]
            injury.save()


def reverse_populate_injury_groups(apps, schema_editor):
    """
    Reverse the migration by clearing injury_group references.
    """
    ContentInjury = apps.get_model("content", "ContentInjury")
    ContentInjury.objects.update(injury_group=None)

    # Delete all ContentInjuryGroup records that were created during migration
    ContentInjuryGroup = apps.get_model("content", "ContentInjuryGroup")
    ContentInjuryGroup.objects.filter(
        description__startswith="Migrated from legacy injury group:"
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("content", "0129_add_content_injury_group"),
    ]

    operations = [
        migrations.RunPython(
            populate_injury_groups,
            reverse_populate_injury_groups,
        ),
    ]
